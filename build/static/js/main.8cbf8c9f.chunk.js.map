{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Header/index.js","components/Board/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","handleClick","id","alt","src","image","Wrapper","children","Header","href","score","highscore","Board","state","friends","bgColor","topScore","ids","indexOf","setState","shuffle","push","resetGame","array","temp","rand","count","length","Math","floor","random","this","map","friend","key","bg-color","Component","App","ReactDOM","render","document","getElementById"],"mappings":"63DAceA,MAXf,SAAoBC,GAChB,OACI,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,MACzD,yBAAKH,UAAU,iBACX,yBAAKI,IAAKL,EAAMI,GAAIE,IAAKN,EAAMO,SAEnC,0BAAML,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,KAAKH,UAAU,W,MCFzDO,MAJf,SAAiBR,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,W,MCY5BC,MAZf,SAAgBV,GACZ,OACI,yBAAKC,UAAU,kDACX,uBAAGA,UAAU,eAAeU,KAAK,KAAjC,gBAGA,wBAAIV,UAAU,SAAd,UAA8BD,EAAMY,OACpC,wBAAIX,UAAU,cAAd,aAAsCD,EAAMa,a,OCgEzCC,E,2MApEXC,MAAQ,CACJC,UACAC,SAAS,EACTL,MAAO,EACPM,SAAU,EACVC,IAAK,I,EAGThB,YAAc,SAAAC,GAAO,IAAD,EACa,EAAKW,MAA7BH,EADW,EACXA,MAAOM,EADI,EACJA,SAAUC,EADN,EACMA,KACE,IAArBA,EAAIC,QAAQhB,IACX,EAAKiB,SAAS,CACVT,MAAOA,EAAQ,EACfM,SAAUN,EAAQ,EAAIM,EAAWN,EAAQ,EAAIM,EAC7CF,QAAS,EAAKM,QAAQN,KAE1BG,EAAII,KAAKnB,IAET,EAAKiB,SAAS,CAACT,MAAO,EAAEO,IAAI,M,EAIpCK,UAAY,WACR,EAAKH,SAAS,CACVT,MAAO,EAAEO,IAAI,M,EAIrBG,QAAU,SAAAG,GAEN,IADA,IAA0BC,EAAMC,EAA5BC,EAAQH,EAAMI,OACZD,GACFD,EAAOG,KAAKC,MAAMD,KAAKE,SAAWJ,KAClCF,EAAOD,EAAMG,GACbH,EAAMG,GAASH,EAAME,GACrBF,EAAME,GAAQD,EAElB,OAAOD,G,wEAID,IAAD,OACL,OAAwB,KAArBQ,KAAKlB,MAAMH,MAEN,6BACI,kDACA,4BAAQV,QAAS+B,KAAKT,WAAtB,gBAKR,6BACI,kBAAC,EAAD,CAAQZ,MAAOqB,KAAKlB,MAAMH,MAAOC,UAAWoB,KAAKlB,MAAMG,WACvD,kBAAC,EAAD,KACKe,KAAKlB,MAAMC,QAAQkB,KAAI,SAAAC,GAAM,OAC1B,kBAAC,EAAD,CACIC,IAAKD,EAAO/B,GACZA,GAAI+B,EAAO/B,GACXiC,WAAU,EAAKtB,MAAME,QACrBV,MAAO4B,EAAO5B,MACdJ,YAAa,EAAKA,uB,GA5D1BmC,aCKLC,MARf,WACE,OACE,yBAAKtC,UAAU,OACb,kBAAC,EAAD,QCANuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8cbf8c9f.chunk.js","sourcesContent":["import React  from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n    return (\n        <div className=\"card\" onClick={() => props.handleClick(props.id)}>\n            <div className=\"img-container\">\n                <img alt={props.id} src={props.image} />\n            </div>\n            <span onClick={() => props.handleClick(props.id)} className=\"spin\"></span>\n        </div>\n    )\n}\n\nexport default FriendCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Header(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <a className=\"navbar-brand\" href=\"/\">\n                Memory Game!\n            </a>\n            <h5 className=\"score\">Score: {props.score}</h5>\n            <h5 className=\"high-score\">Hi-Score: {props.highscore}</h5>\n        </nav>\n    );\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n    state = {\n        friends,\n        bgColor: true,\n        score: 0,\n        topScore: 0,\n        ids: []\n    };\n\n    handleClick = id => {\n        let {score, topScore, ids} = this.state;\n        if(ids.indexOf(id) === -1) {\n            this.setState({\n                score: score + 1,\n                topScore: score + 1 > topScore ? score + 1 : topScore,\n                friends: this.shuffle(friends)\n            });\n            ids.push(id);\n        } else {\n            this.setState({score: 0,ids:[]});\n        }\n    };\n\n    resetGame = () => {\n        this.setState({\n            score: 0,ids:[]\n        });\n    }\n    \n    shuffle = array => {\n        let count = array.length, temp, rand;\n        while(count) {\n            rand = Math.floor(Math.random() * count --);\n            temp = array[count];\n            array[count] = array[rand];\n            array[rand] = temp;\n        }\n        return array;\n    }\n\n\n    render() {\n        if(this.state.score === 12){\n            return (\n                <div>\n                    <h2>Congrats! You won!</h2>\n                    <button onClick={this.resetGame}>Play Again?</button>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Header score={this.state.score} highscore={this.state.topScore} />\n                <Wrapper>\n                    {this.state.friends.map(friend => (\n                        <FriendCard \n                            key={friend.id}\n                            id={friend.id}\n                            bg-color={this.state.bgColor}\n                            image={friend.image}\n                            handleClick={this.handleClick}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport Board from \"./components/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}