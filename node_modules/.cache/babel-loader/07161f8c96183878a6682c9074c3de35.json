{"ast":null,"code":"var _jsxFileName = \"/Users/raul/Desktop/ClickGame/src/components/Board/index.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      score: 0,\n      topScore: 0,\n      ids: []\n    };\n\n    this.handleClick = id => {\n      let _this$state = this.state,\n          score = _this$state.score,\n          topScore = _this$state.topScore,\n          ids = _this$state.ids;\n\n      if (ids.indexOf(id) === -1) {\n        this.setState({\n          score: score + 1,\n          topScore: score + 1 > topScore ? score + 1 : topScore,\n          friends: this.shuffle(friends)\n        });\n        ids.push(id);\n      } else {\n        this.setState({\n          score: 0,\n          ids: []\n        });\n      }\n    };\n\n    this.shuffle = array => {\n      let count = array.length,\n          temp,\n          rand;\n\n      while (count) {\n        rand = Math.floor(Math.random() * count--);\n        temp = array[count];\n        array[count] = array[rand];\n        array[rand] = temp;\n      }\n\n      return array;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, console.log(this.state.score), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard, {\n      key: friend.id,\n      id: friend.id,\n      image: friend.image,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/raul/Desktop/ClickGame/src/components/Board/index.js"],"names":["React","Component","FriendCard","Wrapper","Header","friends","Board","state","score","topScore","ids","handleClick","id","indexOf","setState","shuffle","push","array","count","length","temp","rand","Math","floor","random","render","console","log","map","friend","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACJF,MAAAA,OADI;AAEJG,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,QAAQ,EAAE,CAHN;AAIJC,MAAAA,GAAG,EAAE;AAJD,KADkB;;AAAA,SAQ1BC,WAR0B,GAQZC,EAAE,IAAI;AAAA,wBACa,KAAKL,KADlB;AAAA,UACXC,KADW,eACXA,KADW;AAAA,UACJC,QADI,eACJA,QADI;AAAA,UACMC,GADN,eACMA,GADN;;AAEhB,UAAGA,GAAG,CAACG,OAAJ,CAAYD,EAAZ,MAAoB,CAAC,CAAxB,EAA2B;AACvB,aAAKE,QAAL,CAAc;AACVN,UAAAA,KAAK,EAAEA,KAAK,GAAG,CADL;AAEVC,UAAAA,QAAQ,EAAED,KAAK,GAAG,CAAR,GAAYC,QAAZ,GAAuBD,KAAK,GAAG,CAA/B,GAAmCC,QAFnC;AAGVJ,UAAAA,OAAO,EAAE,KAAKU,OAAL,CAAaV,OAAb;AAHC,SAAd;AAKAK,QAAAA,GAAG,CAACM,IAAJ,CAASJ,EAAT;AACH,OAPD,MAOO;AACH,aAAKE,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAE,CAAT;AAAYE,UAAAA,GAAG,EAAC;AAAhB,SAAd;AACH;AACJ,KApByB;;AAAA,SAsB1BK,OAtB0B,GAsBhBE,KAAK,IAAI;AACf,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAlB;AAAA,UAA0BC,IAA1B;AAAA,UAAgCC,IAAhC;;AACA,aAAMH,KAAN,EAAa;AACTG,QAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,EAAhC,CAAP;AAEAE,QAAAA,IAAI,GAAGH,KAAK,CAACC,KAAD,CAAZ;AACAD,QAAAA,KAAK,CAACC,KAAD,CAAL,GAAeD,KAAK,CAACI,IAAD,CAApB;AACAJ,QAAAA,KAAK,CAACI,IAAD,CAAL,GAAcD,IAAd;AACH;;AACD,aAAOH,KAAP;AACH,KAhCyB;AAAA;;AAmC1BQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,KAAvB,CADL,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWF,OAAX,CAAmBuB,GAAnB,CAAuBC,MAAM,IAC1B,oBAAC,UAAD;AACI,MAAA,GAAG,EAAEA,MAAM,CAACjB,EADhB;AAEI,MAAA,EAAE,EAAEiB,MAAM,CAACjB,EAFf;AAGI,MAAA,KAAK,EAAEiB,MAAM,CAACC,KAHlB;AAII,MAAA,WAAW,EAAE,KAAKnB,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAFJ,CADJ;AAeH;;AAnDyB;;AAsD9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n    state = {\n        friends,\n        score: 0,\n        topScore: 0,\n        ids: []\n    };\n\n    handleClick = id => {\n        let {score, topScore, ids} = this.state;\n        if(ids.indexOf(id) === -1) {\n            this.setState({\n                score: score + 1,\n                topScore: score + 1 > topScore ? score + 1 : topScore,\n                friends: this.shuffle(friends)\n            });\n            ids.push(id);\n        } else {\n            this.setState({ score: 0, ids:[]});\n        }\n    };\n\n    shuffle = array => {\n        let count = array.length, temp, rand;\n        while(count) {\n            rand = Math.floor(Math.random() * count --);\n            \n            temp = array[count];\n            array[count] = array[rand];\n            array[rand] = temp;\n        }\n        return array;\n    }\n\n\n    render() {\n        return (\n            <div>\n                {console.log(this.state.score)}\n                <Wrapper>\n                    {this.state.friends.map(friend => (\n                        <FriendCard \n                            key={friend.id}\n                            id={friend.id}\n                            image={friend.image}\n                            handleClick={this.handleClick}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        )\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}