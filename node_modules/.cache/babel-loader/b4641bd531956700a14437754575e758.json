{"ast":null,"code":"var _jsxFileName = \"/Users/raul/Desktop/ClickGame/src/components/Board/index.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      bgColor: true,\n      score: 0,\n      topScore: 0,\n      ids: []\n    };\n\n    this.handleClick = id => {\n      let _this$state = this.state,\n          score = _this$state.score,\n          topScore = _this$state.topScore,\n          ids = _this$state.ids;\n\n      if (ids.indexOf(id) === -1) {\n        this.setState({\n          score: score + 1,\n          topScore: score + 1 > topScore ? score + 1 : topScore,\n          friends: this.shuffle(friends)\n        });\n        ids.push(id);\n      } else {\n        this.setState({\n          score: 0,\n          ids: []\n        });\n      }\n    };\n\n    this.resetGame = () => {\n      this.setState({\n        score: 0,\n        ids: []\n      });\n    };\n\n    this.shuffle = array => {\n      let count = array.length,\n          temp,\n          rand;\n\n      while (count) {\n        rand = Math.floor(Math.random() * count--);\n        temp = array[count];\n        array[count] = array[rand];\n        array[rand] = temp;\n      }\n\n      return array;\n    };\n  }\n\n  render() {\n    if (this.state.score === 12) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Congrats! You won!\"), React.createElement(\"button\", {\n        onClick: this.resetGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Play Again?\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard, {\n      key: friend.id,\n      id: friend.id,\n      \"bg-color\": this.state.bgColor,\n      image: friend.image,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/raul/Desktop/ClickGame/src/components/Board/index.js"],"names":["React","Component","FriendCard","Wrapper","Header","friends","Board","state","bgColor","score","topScore","ids","handleClick","id","indexOf","setState","shuffle","push","resetGame","array","count","length","temp","rand","Math","floor","random","render","map","friend","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n    state = {\n        friends,\n        bgColor: true,\n        score: 0,\n        topScore: 0,\n        ids: []\n    };\n\n    handleClick = id => {\n        let {score, topScore, ids} = this.state;\n        if(ids.indexOf(id) === -1) {\n            this.setState({\n                score: score + 1,\n                topScore: score + 1 > topScore ? score + 1 : topScore,\n                friends: this.shuffle(friends)\n            });\n            ids.push(id);\n        } else {\n            this.setState({score: 0,ids:[]});\n        }\n    };\n\n    resetGame = () => {\n        this.setState({\n            score: 0,ids:[]\n        });\n    }\n    \n    shuffle = array => {\n        let count = array.length, temp, rand;\n        while(count) {\n            rand = Math.floor(Math.random() * count --);\n            temp = array[count];\n            array[count] = array[rand];\n            array[rand] = temp;\n        }\n        return array;\n    }\n\n\n    render() {\n        if(this.state.score === 12){\n            return (\n                <div>\n                    <h2>Congrats! You won!</h2>\n                    <button onClick={this.resetGame}>Play Again?</button>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Header score={this.state.score} highscore={this.state.topScore} />\n                <Wrapper>\n                    {this.state.friends.map(friend => (\n                        <FriendCard \n                            key={friend.id}\n                            id={friend.id}\n                            bg-color={this.state.bgColor}\n                            image={friend.image}\n                            handleClick={this.handleClick}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        )\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}