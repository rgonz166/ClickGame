{"ast":null,"code":"import _classCallCheck from\"/Users/raul/Desktop/ClickGame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/raul/Desktop/ClickGame/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/raul/Desktop/ClickGame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/raul/Desktop/ClickGame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/raul/Desktop/ClickGame/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import FriendCard from\"../FriendCard\";import Wrapper from\"../Wrapper\";import Header from\"../Header\";import friends from\"../../friends.json\";var Board=/*#__PURE__*/function(_Component){_inherits(Board,_Component);function Board(){var _getPrototypeOf2;var _this;_classCallCheck(this,Board);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Board)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={friends:friends,bgColor:true,score:0,topScore:0,ids:[]};_this.handleClick=function(id){var _this$state=_this.state,score=_this$state.score,topScore=_this$state.topScore,ids=_this$state.ids;if(ids.indexOf(id)===-1){_this.setState({score:score+1,topScore:score+1>topScore?score+1:topScore,friends:_this.shuffle(friends)});ids.push(id);}else{_this.setState({score:0,ids:[]});}};_this.resetGame=function(){_this.setState({score:0,ids:[]});};_this.shuffle=function(array){var count=array.length,temp,rand;while(count){rand=Math.floor(Math.random()*count--);temp=array[count];array[count]=array[rand];array[rand]=temp;}return array;};return _this;}_createClass(Board,[{key:\"render\",value:function render(){var _this2=this;if(this.state.score===12){return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Congrats! You won!\"),React.createElement(\"button\",{onClick:this.resetGame},\"Play Again?\"));}return React.createElement(\"div\",null,React.createElement(Header,{score:this.state.score,highscore:this.state.topScore}),React.createElement(Wrapper,null,this.state.friends.map(function(friend){return React.createElement(FriendCard,{key:friend.id,id:friend.id,\"bg-color\":_this2.state.bgColor,image:friend.image,handleClick:_this2.handleClick});})));}}]);return Board;}(Component);export default Board;","map":{"version":3,"sources":["/Users/raul/Desktop/ClickGame/src/components/Board/index.js"],"names":["React","Component","FriendCard","Wrapper","Header","friends","Board","state","bgColor","score","topScore","ids","handleClick","id","indexOf","setState","shuffle","push","resetGame","array","count","length","temp","rand","Math","floor","random","map","friend","image"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,GAEMC,CAAAA,K,2XACFC,K,CAAQ,CACJF,OAAO,CAAPA,OADI,CAEJG,OAAO,CAAE,IAFL,CAGJC,KAAK,CAAE,CAHH,CAIJC,QAAQ,CAAE,CAJN,CAKJC,GAAG,CAAE,EALD,C,OAQRC,W,CAAc,SAAAC,EAAE,CAAI,iBACa,MAAKN,KADlB,CACXE,KADW,aACXA,KADW,CACJC,QADI,aACJA,QADI,CACMC,GADN,aACMA,GADN,CAEhB,GAAGA,GAAG,CAACG,OAAJ,CAAYD,EAAZ,IAAoB,CAAC,CAAxB,CAA2B,CACvB,MAAKE,QAAL,CAAc,CACVN,KAAK,CAAEA,KAAK,CAAG,CADL,CAEVC,QAAQ,CAAED,KAAK,CAAG,CAAR,CAAYC,QAAZ,CAAuBD,KAAK,CAAG,CAA/B,CAAmCC,QAFnC,CAGVL,OAAO,CAAE,MAAKW,OAAL,CAAaX,OAAb,CAHC,CAAd,EAKAM,GAAG,CAACM,IAAJ,CAASJ,EAAT,EACH,CAPD,IAOO,CACH,MAAKE,QAAL,CAAc,CAACN,KAAK,CAAE,CAAR,CAAUE,GAAG,CAAC,EAAd,CAAd,EACH,CACJ,C,OAEDO,S,CAAY,UAAM,CACd,MAAKH,QAAL,CAAc,CACVN,KAAK,CAAE,CADG,CACDE,GAAG,CAAC,EADH,CAAd,EAGH,C,OAEDK,O,CAAU,SAAAG,KAAK,CAAI,CACf,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAlB,CAA0BC,IAA1B,CAAgCC,IAAhC,CACA,MAAMH,KAAN,CAAa,CACTG,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBN,KAAK,EAAhC,CAAP,CACAE,IAAI,CAAGH,KAAK,CAACC,KAAD,CAAZ,CACAD,KAAK,CAACC,KAAD,CAAL,CAAeD,KAAK,CAACI,IAAD,CAApB,CACAJ,KAAK,CAACI,IAAD,CAAL,CAAcD,IAAd,CACH,CACD,MAAOH,CAAAA,KAAP,CACH,C,wEAGQ,iBACL,GAAG,KAAKZ,KAAL,CAAWE,KAAX,GAAqB,EAAxB,CAA2B,CACvB,MACI,gCACI,mDADJ,CAEI,8BAAQ,OAAO,CAAE,KAAKS,SAAtB,gBAFJ,CADJ,CAMH,CACD,MACI,gCACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,KAAKX,KAAL,CAAWE,KAA1B,CAAiC,SAAS,CAAE,KAAKF,KAAL,CAAWG,QAAvD,EADJ,CAEI,oBAAC,OAAD,MACK,KAAKH,KAAL,CAAWF,OAAX,CAAmBsB,GAAnB,CAAuB,SAAAC,MAAM,QAC1B,qBAAC,UAAD,EACI,GAAG,CAAEA,MAAM,CAACf,EADhB,CAEI,EAAE,CAAEe,MAAM,CAACf,EAFf,CAGI,WAAU,MAAI,CAACN,KAAL,CAAWC,OAHzB,CAII,KAAK,CAAEoB,MAAM,CAACC,KAJlB,CAKI,WAAW,CAAE,MAAI,CAACjB,WALtB,EAD0B,EAA7B,CADL,CAFJ,CADJ,CAgBH,C,mBAlEeX,S,EAqEpB,cAAeK,CAAAA,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"../FriendCard\";\nimport Wrapper from \"../Wrapper\";\nimport Header from \"../Header\";\nimport friends from \"../../friends.json\";\n\nclass Board extends Component {\n    state = {\n        friends,\n        bgColor: true,\n        score: 0,\n        topScore: 0,\n        ids: []\n    };\n\n    handleClick = id => {\n        let {score, topScore, ids} = this.state;\n        if(ids.indexOf(id) === -1) {\n            this.setState({\n                score: score + 1,\n                topScore: score + 1 > topScore ? score + 1 : topScore,\n                friends: this.shuffle(friends)\n            });\n            ids.push(id);\n        } else {\n            this.setState({score: 0,ids:[]});\n        }\n    };\n\n    resetGame = () => {\n        this.setState({\n            score: 0,ids:[]\n        });\n    }\n    \n    shuffle = array => {\n        let count = array.length, temp, rand;\n        while(count) {\n            rand = Math.floor(Math.random() * count --);\n            temp = array[count];\n            array[count] = array[rand];\n            array[rand] = temp;\n        }\n        return array;\n    }\n\n\n    render() {\n        if(this.state.score === 12){\n            return (\n                <div>\n                    <h2>Congrats! You won!</h2>\n                    <button onClick={this.resetGame}>Play Again?</button>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Header score={this.state.score} highscore={this.state.topScore} />\n                <Wrapper>\n                    {this.state.friends.map(friend => (\n                        <FriendCard \n                            key={friend.id}\n                            id={friend.id}\n                            bg-color={this.state.bgColor}\n                            image={friend.image}\n                            handleClick={this.handleClick}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        )\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}